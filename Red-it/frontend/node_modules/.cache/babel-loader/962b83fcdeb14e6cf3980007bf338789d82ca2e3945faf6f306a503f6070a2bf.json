{"ast":null,"code":"import React,{useState}from\"react\";import\"./dashboard.css\";import Summary from'./summary.jsx';import FlashCards from\"./flashcards.jsx\";import LoginSignup from'./loginSignup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(_ref){let{onLogout}=_ref;const[func,setFunc]=useState('Default');const[loggedIn,setLoggedIn]=useState(true);// Improved handleClick function that takes an argument\nfunction handleClick(fun){setFunc(fun);}const handleLogout=()=>{// Call the onLogout function passed from parent component\nif(typeof onLogout==='function'){onLogout();setLoggedIn(false);}};if(!loggedIn){return/*#__PURE__*/_jsx(LoginSignup,{});}// Render different components based on `func` state\nswitch(func){case'Default':return/*#__PURE__*/_jsx(\"div\",{class:\"dashboard\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"header-box\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"head\",children:[/*#__PURE__*/_jsx(\"span\",{class:\"heading\",children:\"DASHBOARD\"}),/*#__PURE__*/_jsx(\"button\",{class:\"logout-button\",onClick:handleLogout,children:\"Logout\"})]}),/*#__PURE__*/_jsx(\"div\",{class:\"btns-container\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{class:\"dashboard-button\",onClick:()=>handleClick('Summary'),children:\"Summary\"}),/*#__PURE__*/_jsx(\"button\",{class:\"dashboard-button\",onClick:()=>handleClick('Flashcards'),children:\"Flashcards\"}),/*#__PURE__*/_jsx(\"button\",{class:\"dashboard-button\",onClick:()=>handleClick('Presentation'),children:\"Presentation\"}),/*#__PURE__*/_jsx(\"button\",{class:\"dashboard-button\",onClick:()=>handleClick('History'),children:\"History\"})]})})]})});case'Summary':return/*#__PURE__*/_jsx(Summary,{});case'Flashcards':return/*#__PURE__*/_jsx(FlashCards,{});// Add cases for 'Flashcards', 'Presentation', 'History' as needed\ndefault:// It's a good practice to have a default case that returns null or a default component\nreturn null;}// return (\n//     <div class=\"dashboard\">\n//         <div class=\"content-box\">\n//             <div class=\"header\">\n//                 <span class=\"title\">DASHBOARD</span>\n//                 <button class=\"logout-button\" onClick=\"handleLogout()\">\n//                     Logout\n//                 </button>\n//             </div>\n//             <div class=\"summary-container\">\n//                 <div class=\"button-container\">\n//                     <button class=\"dashboard-button\" onClick={() => handleClick('Summary')}>Summary</button>\n//                     <button class=\"dashboard-button\" onClick={() => handleClick('Flashcards')}>Flashcards</button>\n//                     <button class=\"dashboard-button\" onClick={() => handleClick('Presentation')}>Presentation</button>\n//                     <button class=\"dashboard-button\" onClick={() => handleClick('History')}>History</button>\n//                 </div>\n//             </div>\n//         </div>\n//     </div>\n// );\n}export default Dashboard;// import React, { useState } from \"react\";\n// import \"./dashboard.css\";\n// import Summary from './summary.jsx';\n// import FlashCards from \"./flashcards.jsx\";\n// import LoginSignup from './loginSignup';\n// function Dashboard({ onLogout }) {\n//     const [func, setFunc] = useState('Default');\n//     const [loggedIn, setLoggedIn] = useState(true);\n//     const [selectedLanguage, setSelectedLanguage] = useState('English');\n//     // Function to handle language selection\n//     const handleLanguageChange = (language) => {\n//         setSelectedLanguage(language);\n//     };\n//     // Improved handleClick function that takes an argument\n//     function handleClick(fun) {\n//         setFunc(fun);\n//     }\n//     const handleLogout = () => {\n//         // Call the onLogout function passed from parent component\n//         if (typeof onLogout === 'function') {\n//             onLogout();\n//             setLoggedIn(false);\n//         }\n//     };\n//     if (!loggedIn) {\n//         return (\n//             <LoginSignup />\n//         );\n//     }\n//     // Render different components based on `func` state and selected language\n//     switch (func) {\n//         case 'Default':\n//             return (\n//                 <div className=\"dashboard\">\n//                     <div className=\"header-box\">\n//                         <div className=\"head\">\n//                             <span className=\"heading\">DASHBOARD</span>\n//                             <button className=\"logout-button\" onClick={handleLogout}>\n//                                 Logout\n//                             </button>\n//                         </div>\n//                         <div className=\"btns-container\">\n//                         <div className=\"language-info\">Please Select Language for Summaries and Flash Cards</div>\n//                             <div className=\"language-select\">\n//                                 <select value={selectedLanguage} onChange={(e) => handleLanguageChange(e.target.value)}>\n//                                     <option value=\"English\">English</option>\n//                                     <option value=\"Spanish\">Spanish</option>\n//                                     {/* Add more language options as needed */}\n//                                 </select>\n//                             </div>\n//                             <div className=\"button-container\">\n//                                 <button className=\"dashboard-button\" onClick={() => handleClick('Summary')}>Summary</button>\n//                                 <button className=\"dashboard-button\" onClick={() => handleClick('Flashcards')}>Flashcards</button>\n//                                 <button className=\"dashboard-button\" onClick={() => handleClick('Presentation')}>Presentation</button>\n//                                 <button className=\"dashboard-button\" onClick={() => handleClick('History')}>History</button>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             );\n//         case 'Summary':\n//             return <Summary language={selectedLanguage} />;\n//         case 'Flashcards':\n//             return <FlashCards language={selectedLanguage} />;\n//         // Add cases for 'Presentation', 'History' as needed\n//         default:\n//             // It's a good practice to have a default case that returns null or a default component\n//             return null;\n//     }\n// }\n// export default Dashboard;","map":{"version":3,"names":["React","useState","Summary","FlashCards","LoginSignup","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","onLogout","func","setFunc","loggedIn","setLoggedIn","handleClick","fun","handleLogout","class","children","onClick"],"sources":["C:/Users/Hp/Red-it/Red-it/frontend/src/components/dashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./dashboard.css\";\r\nimport Summary from './summary.jsx';\r\nimport FlashCards from \"./flashcards.jsx\";\r\nimport LoginSignup from './loginSignup';\r\n\r\n\r\nfunction Dashboard({ onLogout }) {\r\n    const [func, setFunc] = useState('Default');\r\n    const [loggedIn, setLoggedIn] = useState(true);\r\n\r\n\r\n    // Improved handleClick function that takes an argument\r\n    function handleClick(fun) {\r\n        setFunc(fun);\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        // Call the onLogout function passed from parent component\r\n        if (typeof onLogout === 'function') {\r\n            onLogout();\r\n            setLoggedIn(false);\r\n        }\r\n    };\r\n    if (!loggedIn) {\r\n        return (\r\n            <LoginSignup />\r\n        );\r\n    }\r\n\r\n    // Render different components based on `func` state\r\n    switch (func) {\r\n        case 'Default':\r\n            return (\r\n                <div class=\"dashboard\">\r\n                    <div class=\"header-box\">\r\n                        <div class=\"head\">\r\n                            <span class=\"heading\">DASHBOARD</span>\r\n                            <button class=\"logout-button\" onClick={handleLogout}>\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"btns-container\">\r\n                            <div class=\"button-container\">\r\n                                <button class=\"dashboard-button\" onClick={() => handleClick('Summary')}>Summary</button>\r\n                                <button class=\"dashboard-button\" onClick={() => handleClick('Flashcards')}>Flashcards</button>\r\n                                <button class=\"dashboard-button\" onClick={() => handleClick('Presentation')}>Presentation</button>\r\n                                <button class=\"dashboard-button\" onClick={() => handleClick('History')}>History</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        case 'Summary':\r\n            return <Summary />;\r\n        case 'Flashcards':\r\n            return <FlashCards />;\r\n        // Add cases for 'Flashcards', 'Presentation', 'History' as needed\r\n        default:\r\n            // It's a good practice to have a default case that returns null or a default component\r\n            return null;\r\n    }\r\n    // return (\r\n    //     <div class=\"dashboard\">\r\n    //         <div class=\"content-box\">\r\n    //             <div class=\"header\">\r\n    //                 <span class=\"title\">DASHBOARD</span>\r\n    //                 <button class=\"logout-button\" onClick=\"handleLogout()\">\r\n    //                     Logout\r\n    //                 </button>\r\n    //             </div>\r\n    //             <div class=\"summary-container\">\r\n    //                 <div class=\"button-container\">\r\n    //                     <button class=\"dashboard-button\" onClick={() => handleClick('Summary')}>Summary</button>\r\n    //                     <button class=\"dashboard-button\" onClick={() => handleClick('Flashcards')}>Flashcards</button>\r\n    //                     <button class=\"dashboard-button\" onClick={() => handleClick('Presentation')}>Presentation</button>\r\n    //                     <button class=\"dashboard-button\" onClick={() => handleClick('History')}>History</button>\r\n    //                 </div>\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"./dashboard.css\";\r\n// import Summary from './summary.jsx';\r\n// import FlashCards from \"./flashcards.jsx\";\r\n// import LoginSignup from './loginSignup';\r\n\r\n// function Dashboard({ onLogout }) {\r\n//     const [func, setFunc] = useState('Default');\r\n//     const [loggedIn, setLoggedIn] = useState(true);\r\n//     const [selectedLanguage, setSelectedLanguage] = useState('English');\r\n\r\n//     // Function to handle language selection\r\n//     const handleLanguageChange = (language) => {\r\n//         setSelectedLanguage(language);\r\n//     };\r\n\r\n//     // Improved handleClick function that takes an argument\r\n//     function handleClick(fun) {\r\n//         setFunc(fun);\r\n//     }\r\n\r\n//     const handleLogout = () => {\r\n//         // Call the onLogout function passed from parent component\r\n//         if (typeof onLogout === 'function') {\r\n//             onLogout();\r\n//             setLoggedIn(false);\r\n//         }\r\n//     };\r\n\r\n//     if (!loggedIn) {\r\n//         return (\r\n//             <LoginSignup />\r\n//         );\r\n//     }\r\n\r\n//     // Render different components based on `func` state and selected language\r\n//     switch (func) {\r\n//         case 'Default':\r\n//             return (\r\n//                 <div className=\"dashboard\">\r\n//                     <div className=\"header-box\">\r\n//                         <div className=\"head\">\r\n//                             <span className=\"heading\">DASHBOARD</span>\r\n//                             <button className=\"logout-button\" onClick={handleLogout}>\r\n//                                 Logout\r\n//                             </button>\r\n//                         </div>\r\n//                         <div className=\"btns-container\">\r\n//                         <div className=\"language-info\">Please Select Language for Summaries and Flash Cards</div>\r\n//                             <div className=\"language-select\">\r\n//                                 <select value={selectedLanguage} onChange={(e) => handleLanguageChange(e.target.value)}>\r\n//                                     <option value=\"English\">English</option>\r\n//                                     <option value=\"Spanish\">Spanish</option>\r\n//                                     {/* Add more language options as needed */}\r\n//                                 </select>\r\n//                             </div>\r\n//                             <div className=\"button-container\">\r\n//                                 <button className=\"dashboard-button\" onClick={() => handleClick('Summary')}>Summary</button>\r\n//                                 <button className=\"dashboard-button\" onClick={() => handleClick('Flashcards')}>Flashcards</button>\r\n//                                 <button className=\"dashboard-button\" onClick={() => handleClick('Presentation')}>Presentation</button>\r\n//                                 <button className=\"dashboard-button\" onClick={() => handleClick('History')}>History</button>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             );\r\n//         case 'Summary':\r\n//             return <Summary language={selectedLanguage} />;\r\n//         case 'Flashcards':\r\n//             return <FlashCards language={selectedLanguage} />;\r\n//         // Add cases for 'Presentation', 'History' as needed\r\n//         default:\r\n//             // It's a good practice to have a default case that returns null or a default component\r\n//             return null;\r\n//     }\r\n// }\r\n\r\n// export default Dashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,iBAAiB,CACxB,MAAO,CAAAC,OAAO,KAAM,eAAe,CACnC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGxC,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3B,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,SAAS,CAAC,CAC3C,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAG9C;AACA,QAAS,CAAAe,WAAWA,CAACC,GAAG,CAAE,CACtBJ,OAAO,CAACI,GAAG,CAAC,CAChB,CAEA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACvB;AACA,GAAI,MAAO,CAAAP,QAAQ,GAAK,UAAU,CAAE,CAChCA,QAAQ,CAAC,CAAC,CACVI,WAAW,CAAC,KAAK,CAAC,CACtB,CACJ,CAAC,CACD,GAAI,CAACD,QAAQ,CAAE,CACX,mBACIR,IAAA,CAACF,WAAW,GAAE,CAAC,CAEvB,CAEA;AACA,OAAQQ,IAAI,EACR,IAAK,SAAS,CACV,mBACIN,IAAA,QAAKa,KAAK,CAAC,WAAW,CAAAC,QAAA,cAClBZ,KAAA,QAAKW,KAAK,CAAC,YAAY,CAAAC,QAAA,eACnBZ,KAAA,QAAKW,KAAK,CAAC,MAAM,CAAAC,QAAA,eACbd,IAAA,SAAMa,KAAK,CAAC,SAAS,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,cACtCd,IAAA,WAAQa,KAAK,CAAC,eAAe,CAACE,OAAO,CAAEH,YAAa,CAAAE,QAAA,CAAC,QAErD,CAAQ,CAAC,EACR,CAAC,cACNd,IAAA,QAAKa,KAAK,CAAC,gBAAgB,CAAAC,QAAA,cACvBZ,KAAA,QAAKW,KAAK,CAAC,kBAAkB,CAAAC,QAAA,eACzBd,IAAA,WAAQa,KAAK,CAAC,kBAAkB,CAACE,OAAO,CAAEA,CAAA,GAAML,WAAW,CAAC,SAAS,CAAE,CAAAI,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxFd,IAAA,WAAQa,KAAK,CAAC,kBAAkB,CAACE,OAAO,CAAEA,CAAA,GAAML,WAAW,CAAC,YAAY,CAAE,CAAAI,QAAA,CAAC,YAAU,CAAQ,CAAC,cAC9Fd,IAAA,WAAQa,KAAK,CAAC,kBAAkB,CAACE,OAAO,CAAEA,CAAA,GAAML,WAAW,CAAC,cAAc,CAAE,CAAAI,QAAA,CAAC,cAAY,CAAQ,CAAC,cAClGd,IAAA,WAAQa,KAAK,CAAC,kBAAkB,CAACE,OAAO,CAAEA,CAAA,GAAML,WAAW,CAAC,SAAS,CAAE,CAAAI,QAAA,CAAC,SAAO,CAAQ,CAAC,EACvF,CAAC,CACL,CAAC,EACL,CAAC,CACL,CAAC,CAEd,IAAK,SAAS,CACV,mBAAOd,IAAA,CAACJ,OAAO,GAAE,CAAC,CACtB,IAAK,YAAY,CACb,mBAAOI,IAAA,CAACH,UAAU,GAAE,CAAC,CACzB;AACA,QACI;AACA,MAAO,KAAI,CACnB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ,CAEA,cAAe,CAAAM,SAAS,CAExB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}